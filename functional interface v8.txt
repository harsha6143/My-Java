
In Java, a functional interface is an interface that contains only one abstract method. Functional interfaces are a key concept in Java's support for functional programming and the use of lambda expressions. The @FunctionalInterface annotation is optional but can be used to ensure that the interface meets the criteria of a functional interface.


without functional interface

class test {
    public static void main(String[] args){
        // create anonymous inner class object
        new Thread(new Runnable() {
            public void run()
            {
                System.out.println("new thread by runnable");
            }
        }).start();

        new Thread(new Thread(){
            public void run(){
                System.out.println("new thread by thread()");
            }
        }).start();

    }
}


with functional interface

class test {
    public static void main(String[] args){

        new Thread(() -> {
            System.out.println("New thread created");
        }).start();

        new Thread(()-> {
                System.out.println("new thraed form new thread()");
        }).start();

    }
}


multiplication using functional interface

interface mux{
    int multiply(int a,int b);
}
class test {
    public static void main(String[] args){
        int a=100;
        int b=299;
        mux ad=(x,y)->x*y;
        int result= ad.multiply(a,b);
        System.out.println(result);
    }
}
